* { 
    box-sizing: border-box; 
    margin:0;
    padding:0;
} 

#calculatorWrapper {
    display:flex;
    flex-wrap: wrap; /* need this to force other siblings to wrap to other rows (besides first row of results and cancel button) */
    width:400px;
    height:550px;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-right: -50%;
    transform: translate(-50%, -50%);
}

#resultSection {
    text-align: right;
    /* flex:1; is equivalent to flex-grow:1; flex-shrink:1; flex-basis:0;*/
    /* max-width: 400px; */
    min-width: 0;
    padding-right: 0.5rem;
    font-size: 2rem;
}

.btn, .btn-rowWide, .btn-wide {
    flex-grow:1;
    flex-shrink:1;
    background-color: white;
}

.btn, .cancel {
    flex-basis: 25%;
}

.btn-rowWide {
    flex-basis: 100%;
}

.btn-wide {
    flex-basis: 50%;
}

button, div {
    border: 0.5px solid black;
}

.equalOp, .operation {
    background-color: rgb(162,168,50);
}


/*
LOGIC TO UNDERSTAND YOUR CALCULATOR STRUCTURE (SELF NOTE): you have an overarching flexbox. This is indicated by the div with id='calculatorWrapper'. For each div/element you create within this container, because of how you've specified the flex-grow/shrink options (either by default, or directly specifying), each div will take up equal spacing. 

Hence why for the busttonsSection div, you need to have flex-basis:100% to force it to have a starting width of the calculatorWrapper parent. If not, and you have something smaller, then the buttons section will look out of place. 

The second div within your first container contains the buttons. This is also a flexbox itself. Similarly, the topSection div is also a flexbox; you essentially have two flexboxes within a flexbox. 

For each flexbox within the main one, need to specify flex-basis:100%. This makes sure each div's width is the same as the parent container! 

Note also you set the flex-basis of the btn class i.e., the flex items. Lesson learned: you can set the flex basis of both the container and children! Wait...well, the container here is also a flex-item. NVM. 

The combination of flex-wrap:wrap and everything else together enforces the shape and display of the calculator. Using flex is better than hardcoding the widths of each element. The only spot you would need to change/hard code is the initial width of the calculator itself, with the div with id='calculatorWrapper'
*/